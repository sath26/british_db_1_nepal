CREATE OR REPLACE PROCEDURE SPR_CLEAN_ACCOUNT
AS
CURSOR CUR IS
SELECT * FROM ACCOUNT_ERROR;
RES             ACCOUNT_ERROR%ROWTYPE;
TEMP_VAL        ACCOUNT_CLEAN.ACCOUNT_NAME%TYPE;

BEGIN 
OPEN CUR ;
LOOP
FETCH CUR INTO RES;
EXIT WHEN CUR%NOTFOUND;
CASE TRUE 
WHEN RES.REGISTERED_DATE IS NULL
THEN
  INSERT INTO ACCOUNT_CLEAN 
    VALUES(
      RES.account_skid,--ACCOUNT_SKID OF CLEAN
      RES.ACCOUNT_id_lds,
      RES.ACCOUNT_id_mch,--ACCOUNT_ID OF CLEAN
      RES.ACCOUNT_NAME,
      RES.ACCOUNT_POSTCODE,
      TO_DATE(TRUNC
      (
        DBMS_RANDOM.VALUE
          (
          TO_CHAR(DATE '2010-01-01','J') ,
          TO_CHAR(DATE '2015-06-06','J')
          )
      ),
      'J'),
      RES.TURNOVER,
      RES.NO_OF_EMPLOYEES,
      RES.GLOBAL_INFLUENCE
      );
  UPDATE ACC_ISSUES SET I_STATUS ='FIXED' WHERE ROW_ID= RES.ACCOUNT_SKID ;--NEED surrogate key of error talbe

WHEN REGEXP_LIKE(RES.ACCOUNT_NAME,'[*|_|#|&]' )
THEN
  SELECT TRANSLATE(RES.ACCOUNT_NAME, '#&*_', ' ') INTO 
      TEMP_VAL FROM DUAL;
  
INSERT INTO ACCOUNT_CLEAN 
    VALUES(
      RES.account_skid,
      RES.ACCOUNT_id_lds,
      RES.ACCOUNT_id_mch,
      TRIM(TEMP_VAL),
      RES.ACCOUNT_POSTCODE,
      RES.REGISTERED_DATE,
      RES.TURNOVER,
      RES.NO_OF_EMPLOYEES,
      RES.GLOBAL_INFLUENCE
      );
  UPDATE ACC_ISSUES SET I_STATUS ='FIXED' WHERE ROW_ID= RES.ACCOUNT_SKID;
  END CASE;
END LOOP;
CLOSE CUR;
EXCEPTION 
WHEN NO_DATA_FOUND THEN 
DBMS_OUTPUT.PUT_LINE('DATA NOT FOUND');
END SPR_CLEAN_ACCOUNT;
--EXECUTING PROCEDURE-----------------------------------
BEGIN 
SPR_CLEAN_ACCOUNT;
END;


--100% data migration is needed
-- update issue table that its fixed
-- THERE ARE VALUES THAT ARE EMPTY
--only gave data to registered because i might need it for report
------------------------------------------------------------------------------------------------------
