 DROP TABLE STG_PROJECT
CREATE TABLE  "STG_PROJECT" 
   (	"PROJECT_KEY" NUMBER NOT NULL ENABLE, 
	"PROJECT_ID_LDS" NUMBER  , 
	"PROJECT_ID_MCH" NUMBER, 
	"PLCT_SHORT_DESC" VARCHAR2(100), 
	"PLCT_REQUIRED_START_DATE" DATE, 
	"PLCT_ESTIMATED_END_DATE" DATE, 
	"PLCT_ACTUAL_START_DATE" DATE, 
	"PLCT_ACTUAL_END_DATE" DATE, 
	"PLCT_RENEWAL_NUMBER" NUMBER, 
	"PLCT_RATE_DAY_PROJ" VARCHAR2(50), 
	"FEEDBACK_VALUE" NUMBER, 
	"ACTUAL_SALARY" NUMBER, 
	"CONSULTANT_ID" NUMBER, 
	"ACCOUNT_ID" NUMBER,
	 CONSTRAINT "PK_STAGING_PROJECT_KEY" PRIMARY KEY ("PROJECT_KEY") ENABLE
   ) ;


 --ALTER TABLE STAGING_PROJECT ADD CONSTRAINT "PK_STAGING_PROJECT_KEY" PRIMARY KEY ("PROJECT_KEY");
   
DROP SEQUENCE PROJECT_KEY
CREATE SEQUENCE   "PROJECT_KEY" 
 MINVALUE 1
 MAXVALUE 9999999999 
 INCREMENT BY 1 
 START WITH 1 
 CACHE 20 
 NOORDER  
 NOCYCLE ;

CREATE OR REPLACE TRIGGER  "STAGING_PROJECT_TRIGGER" 
before insert on STG_PROJECT
for each row
begin
:new.PROJECT_KEY:=PROJECT_KEY.NEXTVAL;
end;


---------------------------------------------------------------------------------
create or replace PROCEDURE PL_PROJECT_LDS
IS
BEGIN
insert INTO STG_PROJECT 
 select  
	PROJECT_KEY.NEXTVAL,
	PROJECT_ID,
	'',
	PJ_SHORT_DESC,
	PJ_REQUIRED_START_DATE,
	PJ_ESTIMATED_END_DATE,
	PJ_ACTUAL_START_DATE,
	PJ_ACTUAL_END_DATE,
	PJ_RENEWAL_NO,
	PJ_RATE_DAY_PROJ,
	FEEDBACK_VALUE,
	ACTUAL_SALARY,
	FK2_CONSULTANT_ID,
	FK1_ACCOUNT_ID
from LDS_PROJECT;
END PL_PROJECT_LDS;

begin
PL_PROJECT_LDS;
end;
------------------------------------------------------------------------------------------
create or replace PROCEDURE PL_PROJECT_MCH
iS
BEGIN
insert INTO STG_PROJECT 
select
	PROJECT_KEY.NEXTVAL,
	'',
	PROJECT_ID,
	PRJ_SHORT_DESC,
	PRJ_REQUIRED_START_DATE,
	PRJ_ESTIMATED_END_DATE,
	PRJ_ACTUAL_START_DATE,
	PRJ_ACTUAL_END_DATE,
	NULL,
	NULL,
	NULL,
	ACTUAL_SALARY,
	FK2_CONSULTANT_ID,
	NULL
from MCH_JOB;
END PL_PROJECT_MCH;

BEGIN
PL_PROJECT_MCH;
END;

SELECT COUNT(*) FROM STAGING_PROJECT;
SELECT COUNT(*) FROM MCH_JOB;
