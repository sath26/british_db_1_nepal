CREATE OR REPLACE PROCEDURE SPR_CLEAN_ERR_CONSULTANT
AS
CURSOR CUR IS
SELECT * FROM STG_CONSULTANT;

RES   STG_CONSULTANT%ROWTYPE;

BEGIN 
OPEN CUR ;
LOOP
FETCH CUR INTO RES;
EXIT WHEN CUR%NOTFOUND;
CASE TRUE
WHEN  REGEXP_LIKE(RES.CONSULTANT_NAME, '[*|_|#|&]')  
THEN
INSERT INTO CONSULTANT_ERROR 
VALUES(
  STAGING_CONSULTANT_SEQ.nextval,--CONSULTANT_SKID OF ERROR
  RES.CONSULTANT_KEY,--CONSULTANT_ID OF ERROR
  RES.CONSULTANT_NAME, 
  RES.CONSULTANT_POSTCODE, 
  RES.HIGHEST_QUALIFICATION,
  RES.CONSULTANT_REGISTERED,
  RES.CONSULTANT_SKILL,
  RES.PREFERRED_ROLE
  );
  
INSERT INTO CON_ISSUES
  (
  ISSUE_ID, 
  ROW_ID, 
  ISSUE, 
  i_STATUS)
VALUES(
  STAGING_CONSULTANT_SEQ.nextval, 
  RES.CONSULTANT_KEY, 
  'SPECIAL CHARACTERS FOUND ON CONSULTANT', 
  'UN-FIXED'
  );

WHEN   RES.CONSULTANT_NAME IS NULL 
THEN
INSERT INTO CONSULTANT_ERROR 
VALUES(
  STAGING_CONSULTANT_SEQ.nextval,
  RES.CONSULTANT_KEY,
  RES.CONSULTANT_NAME, 
  RES.CONSULTANT_POSTCODE, 
  RES.HIGHEST_QUALIFICATION,
  RES.CONSULTANT_REGISTERED,
  RES.CONSULTANT_SKILL,
  RES.PREFERRED_ROLE
  );
  
INSERT INTO con_ISSUES
  (
  ISSUE_ID, 
  ROW_ID, 
  ISSUE, 
  i_STATUS)
VALUES(
  STAGING_CONSULTANT_SEQ.nextval, 
  RES.CONSULTANT_KEY, 
  'FOUND VALUES EMPTY', 
  'UN-FIXED'
  );
  WHEN   REGEXP_LIKE(RES.CONSULTANT_NAME,'[[:digit:]]') 
THEN
INSERT INTO CONSULTANT_ERROR 
VALUES(
  STAGING_CONSULTANT_SEQ.nextval,
  RES.CONSULTANT_KEY,
  RES.CONSULTANT_NAME, 
  RES.CONSULTANT_POSTCODE, 
  RES.HIGHEST_QUALIFICATION,
  RES.CONSULTANT_REGISTERED,
  RES.CONSULTANT_SKILL,
  RES.PREFERRED_ROLE
  );
  
INSERT INTO CON_ISSUES
  (
  ISSUE_ID, 
  ROW_ID, 
  ISSUE, 
  i_STATUS)
VALUES(
  STAGING_CONSULTANT_SEQ.nextval, 
  RES.CONSULTANT_KEY, 
  'FOUND numeric VALUES', 
  'UN-FIXED'
  );
ELSE INSERT INTO CONSULTANT_CLEAN 
VALUES(
  STAGING_CONSULTANT_SEQ.nextval,
  RES.CONSULTANT_KEY,
  RES.CONSULTANT_NAME, 
  RES.CONSULTANT_POSTCODE, 
  RES.HIGHEST_QUALIFICATION,
  RES.CONSULTANT_REGISTERED,
  RES.CONSULTANT_SKILL,
  RES.PREFERRED_ROLE
  );

END CASE;
END LOOP;
CLOSE CUR;
END SPR_CLEAN_ERR_CONSULTANT;

--EXECUTING PROCEDURE-----------------------------------
BEGIN 
SPR_CLEAN_ERR_CONSULTANT;
END;
