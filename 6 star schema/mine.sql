
--------------------------------------------------------------
-- Database creation Script

-- Auto-Generated by QSEE-SuperLite (c) 2001-2004 QSEE-Technologies Ltd.

-- Verbose generation: ON

-- note: spaces within table/column names have been replaced by underscores (_)

-- Target DB: SQL2

-- Entity Model :Entity Relationship Diagram

-- To drop the tables generated by this script run -
--   'D:\british\oracle\qsee\mine_drop.sql'

--------------------------------------------------------------



--------------------------------------------------------------
-- Table Creation --

-- Each entity on the model is represented by a table that needs to be created within the Database.
-- Within SQL new tables are created using the CREATE TABLE command.
-- When a table is created its name and its attributes are defined.
-- The values of which are derived from those specified on the model.
-- Certain constraints are sometimes also specified, such as identification of primary keys.

-- Create a Database table to represent the "Dim_Project" entity.
CREATE TABLE Dim_Project(
	project_skid	INTEGER NOT NULL,
	project_id	INTEGER NOT NULL,
	plt_short_desc	DATE,
	plt_required_start_date	DATE,
	plt_estimated_end_date	DATE,
	plt_actual_start_date	DATE,
	plt_renewal_no	INTEGER,
	actual_salary	INTEGER,
	account_id	INTEGER,
	consulatant_id	INTEGER,
	plt_actual_end_date	INTEGER,
	-- Specify the PRIMARY KEY constraint for table "Dim_Project".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Dim_Project PRIMARY KEY (project_skid)
);

-- Create a Database table to represent the "Dim_Account" entity.
CREATE TABLE Dim_Account(
	account_skid	INTEGER NOT NULL,
	account_id	INTEGER NOT NULL,
	account_name	VARCHAR(8),
	account_postcode	VARCHAR(8),
	registered_date	DATE,
	turnover	INTEGER,
	no_of_employees	INTEGER,
	global_influence	VARCHAR(8),
	-- Specify the PRIMARY KEY constraint for table "Dim_Account".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Dim_Account PRIMARY KEY (account_skid)
);

-- Create a Database table to represent the "Fact" entity.
CREATE TABLE Fact(
	fact_id	INTEGER NOT NULL,
	project_id_fk	INTEGER,
	account_id_fk	INTEGER,
	consultant_id_fk	INTEGER,
	time_id_fk	INTEGER,
	no_of_projects	INTEGER,
	no_of_renewed_projects	INTEGER,
	sum_of_actual_salary	INTEGER,
	project_fkproject_skid	INTEGER NOT NULL,
	consultant_fkconsultant_skid	INTEGER NOT NULL,
	account_fkaccount_skid	INTEGER NOT NULL,
	time_fktime_id	INTEGER NOT NULL,
	-- Specify the PRIMARY KEY constraint for table "Fact".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Fact PRIMARY KEY (fact_id)
);

-- Create a Database table to represent the "Dim_Consultant" entity.
CREATE TABLE Dim_Consultant(
	consultant_skid	INTEGER NOT NULL,
	consultant_id	INTEGER NOT NULL,
	con_name	VARCHAR(8),
	con_postcode	VARCHAR(8),
	highest_qual	INTEGER,
	con_registered	DATE,
	-- Specify the PRIMARY KEY constraint for table "Dim_Consultant".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Dim_Consultant PRIMARY KEY (consultant_skid)
);

-- Create a Database table to represent the "Dim_Time" entity.
CREATE TABLE Dim_Time(
	time_id	INTEGER NOT NULL,
	year	INTEGER,
	month	INTEGER,
	day	INTEGER,
	-- Specify the PRIMARY KEY constraint for table "Dim_Time".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_Dim_Time PRIMARY KEY (time_id)
);


--------------------------------------------------------------
-- Alter Tables to add fk constraints --

-- Now all the tables have been created the ALTER TABLE command is used to define some additional
-- constraints.  These typically constrain values of foreign keys to be associated in some way
-- with the primary keys of related tables.  Foreign key constraints can actually be specified
-- when each table is created, but doing so can lead to dependency problems within the script
-- i.e. tables may be referenced before they have been created.  This method is therefore safer.

-- Alter table to add new constraints required to implement the "one_to_many" relationship

-- This constraint ensures that the foreign key of table "Fact"
-- correctly references the primary key of table "Dim_Project"

ALTER TABLE Fact ADD CONSTRAINT fk1_Fact_to_Dim_Project FOREIGN KEY(project_fkproject_skid) REFERENCES Dim_Project(project_skid) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Alter table to add new constraints required to implement the "one_to_many" relationship

-- This constraint ensures that the foreign key of table "Fact"
-- correctly references the primary key of table "Dim_Consultant"

ALTER TABLE Fact ADD CONSTRAINT fk2_Fact_to_Dim_Consultant FOREIGN KEY(consultant_fkconsultant_skid) REFERENCES Dim_Consultant(consultant_skid) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Alter table to add new constraints required to implement the "one_to_many" relationship

-- This constraint ensures that the foreign key of table "Fact"
-- correctly references the primary key of table "Dim_Account"

ALTER TABLE Fact ADD CONSTRAINT fk3_Fact_to_Dim_Account FOREIGN KEY(account_fkaccount_skid) REFERENCES Dim_Account(account_skid) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Alter table to add new constraints required to implement the "one_to_many" relationship

-- This constraint ensures that the foreign key of table "Fact"
-- correctly references the primary key of table "Dim_Time"

ALTER TABLE Fact ADD CONSTRAINT fk4_Fact_to_Dim_Time FOREIGN KEY(time_fktime_id) REFERENCES Dim_Time(time_id) ON DELETE RESTRICT ON UPDATE RESTRICT;


--------------------------------------------------------------
-- End of DDL file auto-generation
--------------------------------------------------------------
